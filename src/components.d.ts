/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

export namespace Components {
  interface HeartButton {
    /**
     * Total number of hearts
     */
    count: number;
    /**
     * Unique identifier for likeable resource
     */
    id: string;
    /**
     * Boolean indicating whether likeable resource has been liked
     */
    isLiked: boolean;
    /**
     * Cache key for localStorage
     */
    key: string;
  }
  interface HeartButtonAttributes extends StencilHTMLAttributes {
    /**
     * Total number of hearts
     */
    count?: number;
    /**
     * Unique identifier for likeable resource
     */
    id?: string;
    /**
     * Boolean indicating whether likeable resource has been liked
     */
    isLiked?: boolean;
    /**
     * Cache key for localStorage
     */
    key?: string;
  }

  interface GlobalNav {
    giveNavIsShowing: boolean;
    href: string;
    mainNavIsShowing: boolean;
    navClickHandler: Function;
    profileNavIsShowing: boolean;
  }
  interface GlobalNavAttributes extends StencilHTMLAttributes {
    giveNavIsShowing?: boolean;
    href?: string;
    mainNavIsShowing?: boolean;
    navClickHandler?: Function;
    profileNavIsShowing?: boolean;
  }

  interface NavCtas {
    active: string;
    href: string;
  }
  interface NavCtasAttributes extends StencilHTMLAttributes {
    active?: string;
    href?: string;
  }

  interface NavSectionSubnav {
    active: string;
    id: string;
    onBack: Function;
  }
  interface NavSectionSubnavAttributes extends StencilHTMLAttributes {
    active?: string;
    id?: string;
    onBack?: Function;
  }

  interface NavSection {
    activeSection: any;
    id: string;
    isActive: boolean;
    onActivate: any;
  }
  interface NavSectionAttributes extends StencilHTMLAttributes {
    activeSection?: any;
    id?: string;
    isActive?: boolean;
    onActivate?: any;
  }

  interface GiveNav {
    giveNavIsShowing: boolean;
  }
  interface GiveNavAttributes extends StencilHTMLAttributes {
    giveNavIsShowing?: boolean;
  }

  interface ProfileNav {
    profileNavIsShowing: boolean;
  }
  interface ProfileNavAttributes extends StencilHTMLAttributes {
    profileNavIsShowing?: boolean;
  }

  interface SharedHeader {
    src: string;
  }
  interface SharedHeaderAttributes extends StencilHTMLAttributes {
    src?: string;
  }

  interface SnailTrail {
    hidden: boolean;
    href: string;
  }
  interface SnailTrailAttributes extends StencilHTMLAttributes {
    hidden?: boolean;
    href?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    HeartButton: Components.HeartButton;
    GlobalNav: Components.GlobalNav;
    NavCtas: Components.NavCtas;
    NavSectionSubnav: Components.NavSectionSubnav;
    NavSection: Components.NavSection;
    GiveNav: Components.GiveNav;
    ProfileNav: Components.ProfileNav;
    SharedHeader: Components.SharedHeader;
    SnailTrail: Components.SnailTrail;
  }

  interface StencilIntrinsicElements {
    'heart-button': Components.HeartButtonAttributes;
    'global-nav': Components.GlobalNavAttributes;
    'nav-ctas': Components.NavCtasAttributes;
    'nav-section-subnav': Components.NavSectionSubnavAttributes;
    'nav-section': Components.NavSectionAttributes;
    'give-nav': Components.GiveNavAttributes;
    'profile-nav': Components.ProfileNavAttributes;
    'shared-header': Components.SharedHeaderAttributes;
    'snail-trail': Components.SnailTrailAttributes;
  }

  interface HTMLHeartButtonElement extends Components.HeartButton, HTMLStencilElement {}
  var HTMLHeartButtonElement: {
    prototype: HTMLHeartButtonElement;
    new (): HTMLHeartButtonElement;
  };

  interface HTMLGlobalNavElement extends Components.GlobalNav, HTMLStencilElement {}
  var HTMLGlobalNavElement: {
    prototype: HTMLGlobalNavElement;
    new (): HTMLGlobalNavElement;
  };

  interface HTMLNavCtasElement extends Components.NavCtas, HTMLStencilElement {}
  var HTMLNavCtasElement: {
    prototype: HTMLNavCtasElement;
    new (): HTMLNavCtasElement;
  };

  interface HTMLNavSectionSubnavElement extends Components.NavSectionSubnav, HTMLStencilElement {}
  var HTMLNavSectionSubnavElement: {
    prototype: HTMLNavSectionSubnavElement;
    new (): HTMLNavSectionSubnavElement;
  };

  interface HTMLNavSectionElement extends Components.NavSection, HTMLStencilElement {}
  var HTMLNavSectionElement: {
    prototype: HTMLNavSectionElement;
    new (): HTMLNavSectionElement;
  };

  interface HTMLGiveNavElement extends Components.GiveNav, HTMLStencilElement {}
  var HTMLGiveNavElement: {
    prototype: HTMLGiveNavElement;
    new (): HTMLGiveNavElement;
  };

  interface HTMLProfileNavElement extends Components.ProfileNav, HTMLStencilElement {}
  var HTMLProfileNavElement: {
    prototype: HTMLProfileNavElement;
    new (): HTMLProfileNavElement;
  };

  interface HTMLSharedHeaderElement extends Components.SharedHeader, HTMLStencilElement {}
  var HTMLSharedHeaderElement: {
    prototype: HTMLSharedHeaderElement;
    new (): HTMLSharedHeaderElement;
  };

  interface HTMLSnailTrailElement extends Components.SnailTrail, HTMLStencilElement {}
  var HTMLSnailTrailElement: {
    prototype: HTMLSnailTrailElement;
    new (): HTMLSnailTrailElement;
  };

  interface HTMLElementTagNameMap {
    'heart-button': HTMLHeartButtonElement;
    'global-nav': HTMLGlobalNavElement;
    'nav-ctas': HTMLNavCtasElement;
    'nav-section-subnav': HTMLNavSectionSubnavElement;
    'nav-section': HTMLNavSectionElement;
    'give-nav': HTMLGiveNavElement;
    'profile-nav': HTMLProfileNavElement;
    'shared-header': HTMLSharedHeaderElement;
    'snail-trail': HTMLSnailTrailElement;
  }

  interface ElementTagNameMap {
    'heart-button': HTMLHeartButtonElement;
    'global-nav': HTMLGlobalNavElement;
    'nav-ctas': HTMLNavCtasElement;
    'nav-section-subnav': HTMLNavSectionSubnavElement;
    'nav-section': HTMLNavSectionElement;
    'give-nav': HTMLGiveNavElement;
    'profile-nav': HTMLProfileNavElement;
    'shared-header': HTMLSharedHeaderElement;
    'snail-trail': HTMLSnailTrailElement;
  }

  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}
}
