/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface HeartButton {
    /**
    * Total number of hearts
    */
    'count': number;
    /**
    * Unique identifier for likeable resource
    */
    'id': string;
    /**
    * Boolean indicating whether likeable resource has been liked
    */
    'isLiked': boolean;
    /**
    * Cache key for localStorage
    */
    'key': string;
  }
  interface HeartButtonAttributes extends StencilHTMLAttributes {
    /**
    * Total number of hearts
    */
    'count'?: number;
    /**
    * Unique identifier for likeable resource
    */
    'id'?: string;
    /**
    * Boolean indicating whether likeable resource has been liked
    */
    'isLiked'?: boolean;
    /**
    * Cache key for localStorage
    */
    'key'?: string;
  }

  interface CrdsHeader {
    'href': string;
  }
  interface CrdsHeaderAttributes extends StencilHTMLAttributes {
    'href'?: string;
  }

  interface CrdsLink {
    'href': string;
  }
  interface CrdsLinkAttributes extends StencilHTMLAttributes {
    'href'?: string;
  }

  interface NavBar {
    'href': string;
  }
  interface NavBarAttributes extends StencilHTMLAttributes {
    'href'?: string;
  }

  interface NavCtas {
    'href': string;
  }
  interface NavCtasAttributes extends StencilHTMLAttributes {
    'href'?: string;
  }

  interface NavSectionSubnav {
    'active': string;
    'id': string;
  }
  interface NavSectionSubnavAttributes extends StencilHTMLAttributes {
    'active'?: string;
    'id'?: string;
  }

  interface NavSection {
    'activeSection': any;
    'id': string;
    'isActive': boolean;
    'parent': any;
  }
  interface NavSectionAttributes extends StencilHTMLAttributes {
    'activeSection'?: any;
    'id'?: string;
    'isActive'?: boolean;
    'parent'?: any;
  }

  interface SharedHeader {
    /**
    * Returns total number of likes from Contentful
    */
    'isShowing': boolean;
    'src': string;
  }
  interface SharedHeaderAttributes extends StencilHTMLAttributes {
    /**
    * Returns total number of likes from Contentful
    */
    'isShowing'?: boolean;
    'src'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'HeartButton': Components.HeartButton;
    'CrdsHeader': Components.CrdsHeader;
    'CrdsLink': Components.CrdsLink;
    'NavBar': Components.NavBar;
    'NavCtas': Components.NavCtas;
    'NavSectionSubnav': Components.NavSectionSubnav;
    'NavSection': Components.NavSection;
    'SharedHeader': Components.SharedHeader;
  }

  interface StencilIntrinsicElements {
    'heart-button': Components.HeartButtonAttributes;
    'crds-header': Components.CrdsHeaderAttributes;
    'crds-link': Components.CrdsLinkAttributes;
    'nav-bar': Components.NavBarAttributes;
    'nav-ctas': Components.NavCtasAttributes;
    'nav-section-subnav': Components.NavSectionSubnavAttributes;
    'nav-section': Components.NavSectionAttributes;
    'shared-header': Components.SharedHeaderAttributes;
  }


  interface HTMLHeartButtonElement extends Components.HeartButton, HTMLStencilElement {}
  var HTMLHeartButtonElement: {
    prototype: HTMLHeartButtonElement;
    new (): HTMLHeartButtonElement;
  };

  interface HTMLCrdsHeaderElement extends Components.CrdsHeader, HTMLStencilElement {}
  var HTMLCrdsHeaderElement: {
    prototype: HTMLCrdsHeaderElement;
    new (): HTMLCrdsHeaderElement;
  };

  interface HTMLCrdsLinkElement extends Components.CrdsLink, HTMLStencilElement {}
  var HTMLCrdsLinkElement: {
    prototype: HTMLCrdsLinkElement;
    new (): HTMLCrdsLinkElement;
  };

  interface HTMLNavBarElement extends Components.NavBar, HTMLStencilElement {}
  var HTMLNavBarElement: {
    prototype: HTMLNavBarElement;
    new (): HTMLNavBarElement;
  };

  interface HTMLNavCtasElement extends Components.NavCtas, HTMLStencilElement {}
  var HTMLNavCtasElement: {
    prototype: HTMLNavCtasElement;
    new (): HTMLNavCtasElement;
  };

  interface HTMLNavSectionSubnavElement extends Components.NavSectionSubnav, HTMLStencilElement {}
  var HTMLNavSectionSubnavElement: {
    prototype: HTMLNavSectionSubnavElement;
    new (): HTMLNavSectionSubnavElement;
  };

  interface HTMLNavSectionElement extends Components.NavSection, HTMLStencilElement {}
  var HTMLNavSectionElement: {
    prototype: HTMLNavSectionElement;
    new (): HTMLNavSectionElement;
  };

  interface HTMLSharedHeaderElement extends Components.SharedHeader, HTMLStencilElement {}
  var HTMLSharedHeaderElement: {
    prototype: HTMLSharedHeaderElement;
    new (): HTMLSharedHeaderElement;
  };

  interface HTMLElementTagNameMap {
    'heart-button': HTMLHeartButtonElement
    'crds-header': HTMLCrdsHeaderElement
    'crds-link': HTMLCrdsLinkElement
    'nav-bar': HTMLNavBarElement
    'nav-ctas': HTMLNavCtasElement
    'nav-section-subnav': HTMLNavSectionSubnavElement
    'nav-section': HTMLNavSectionElement
    'shared-header': HTMLSharedHeaderElement
  }

  interface ElementTagNameMap {
    'heart-button': HTMLHeartButtonElement;
    'crds-header': HTMLCrdsHeaderElement;
    'crds-link': HTMLCrdsLinkElement;
    'nav-bar': HTMLNavBarElement;
    'nav-ctas': HTMLNavCtasElement;
    'nav-section-subnav': HTMLNavSectionSubnavElement;
    'nav-section': HTMLNavSectionElement;
    'shared-header': HTMLSharedHeaderElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
